{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => history.push(\"/login\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Login - get user token\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["C:/Users/crist/Desktop/Ciclo4/Front/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACIC,UADJ,EACgBC,gBADhB,EACkCC,YADlC,QAEO,SAFP;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KACvBC,QAAD,IAAc;AACVT,EAAAA,KAAK,CACAU,IADL,CACU,qBADV,EACiCH,QADjC,EAEKI,IAFL,CAEWC,GAAD,IAASJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAFnB,EAGKC,KAHL,CAGYC,GAAD,IACHN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEb,UADD;AAELc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,GAAD,CAJhB;AASH,CAXE,C,CAYP;;AACA,OAAO,MAAMC,SAAS,GAAIb,QAAD,IAAeE,QAAD,IAAc;AACjDT,EAAAA,KAAK,CACAU,IADL,CACU,kBADV,EAC8BH,QAD9B,EAEKI,IAFL,CAEWC,GAAD,IAAS;AACX;AACA;AACA,UAAM;AAAES,MAAAA;AAAF,QAAYT,GAAG,CAACO,IAAtB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJW,CAKX;;AACApB,IAAAA,YAAY,CAACoB,KAAD,CAAZ,CANW,CAOX;;AACA,UAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B,CARW,CASX;;AACAZ,IAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GAbL,EAcKV,KAdL,CAcYC,GAAD,IACHN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEb,UADD;AAELc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,GAAD,CAfhB;AAoBH,CArBM,C,CAsBP;;AACA,OAAO,MAAMM,cAAc,GAAID,OAAD,IAAa;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEZ,gBADH;AAEHa,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO;AACHV,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMsB,UAAU,GAAG,MAAOlB,QAAD,IAAc;AAE1Ca,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AAEA3B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAQ,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAPM","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    GET_ERRORS, SET_CURRENT_USER, USER_LOADING\r\n} from \"./types\";\r\n\r\nexport const registerUser = (userData, history) =>\r\n    (dispatch) => {\r\n        axios\r\n            .post(\"/api/users/register\", userData)\r\n            .then((res) => history.push(\"/login\"))\r\n            .catch((err) =>\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data,\r\n                })\r\n            );\r\n    };\r\n// Login - get user token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n    axios\r\n        .post(\"/api/users/login\", userData)\r\n        .then((res) => {\r\n            // Save to localStorage\r\n            // Set token to localStorage\r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch((err) =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data,\r\n            })\r\n        );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded,\r\n    };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING,\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n\r\n    localStorage.removeItem(\"jwtToken\");\r\n\r\n    setAuthToken(false);\r\n\r\n    dispatch(setCurrentUser({}));\r\n};"]},"metadata":{},"sourceType":"module"}